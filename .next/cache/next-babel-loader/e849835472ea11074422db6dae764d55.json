{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport react from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport cx from 'classnames'; //spring props\n\nconst springProps = useSpring({\n  opacity: 1,\n  from: {\n    opacity: 0\n  }\n});\n\nclass ContentContainer extends react.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      visible: true\n    });\n  }\n\n  render() {\n    return __jsx(animated.div, {\n      style: springProps\n    }, __jsx(\"div\", {\n      className: \"contentContainer\"\n    }, this.props.children));\n  }\n\n}\n\nexport default ContentContainer;\n{}\n/* <VisibilitySensor>\n   {({ isVisible }) =>\n       <div className='contentContainer'>\n           {props.children}\n       </div>\n   }\n</VisibilitySensor > */\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{\n  /* <VisibilitySensor\n  partialVisibility\n  offset={{ top: 100, bottom: 100 }}\n  onChange={(isVisible) => {\n     this.setState({ visible: isVisible })\n     // console.log('Element is now %s', this.state.visible);\n  }}\n  > */\n}\n\n__jsx(\"style\", {\n  jsx: true\n}, `\n                        .contentTransition {\n                            opacity: ${this.state.visible ? 1 : 0};\n                            transition: opacity 0.5s linear;\n                        }\n                    `);","map":{"version":3,"sources":["/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/components/layouts/ContentContainer.js"],"names":["react","useSpring","animated","cx","springProps","opacity","from","ContentContainer","Component","visible","render","props","children","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,EAAP,MAAe,YAAf,C,CAEA;;AACA,MAAMC,WAAW,GAAGH,SAAS,CAAC;AAAEI,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,IAAI,EAAE;AAAED,IAAAA,OAAO,EAAE;AAAX;AAApB,CAAD,CAA7B;;AAEA,MAAME,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAAA;AAAA;;AAAA,mCACnC;AACJC,MAAAA,OAAO,EAAE;AADL,KADmC;AAAA;;AAK3CC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,QAAD,CAAU,GAAV;AAAc,MAAA,KAAK,EAAEN;AAArB,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACK,KAAKO,KAAL,CAAWC,QADhB,CADJ,CADJ;AASH;;AAf0C;;AAkB/C,eAAeL,gBAAf;AAGA,CAMwB;AANvB;;;;;;;AAQD;AACA;AACA;;AAEA;AAAC;;;;;;;;AAOI;;AAEL;AAAO,EAAA,GAAG;AAAV,GAAa;;uCAE0B,KAAKM,KAAL,CAAWJ,OAAX,GAAqB,CAArB,GAAyB,CAAE;;;qBAFlE","sourcesContent":["import react from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport cx from 'classnames'\n\n//spring props\nconst springProps = useSpring({ opacity: 1, from: { opacity: 0 } })\n\nclass ContentContainer extends react.Component {\n    state = {\n        visible: true\n    }\n\n    render() {\n        return (\n            <animated.div style={springProps}>\n                <div className='contentContainer'>\n                    {this.props.children}\n\n                </div>\n            </animated.div>\n\n        )\n    }\n}\n\nexport default ContentContainer;\n\n\n{/* <VisibilitySensor>\n    {({ isVisible }) =>\n        <div className='contentContainer'>\n            {props.children}\n        </div>\n    }\n</VisibilitySensor > */}\n\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{/* <VisibilitySensor\npartialVisibility\noffset={{ top: 100, bottom: 100 }}\nonChange={(isVisible) => {\n    this.setState({ visible: isVisible })\n    // console.log('Element is now %s', this.state.visible);\n}}\n> */}\n\n<style jsx>{`\n                        .contentTransition {\n                            opacity: ${this.state.visible ? 1 : 0};\n                            transition: opacity 0.5s linear;\n                        }\n                    `}</style>"]},"metadata":{},"sourceType":"module"}