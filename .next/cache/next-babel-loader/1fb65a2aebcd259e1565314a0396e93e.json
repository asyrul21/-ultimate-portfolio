{"ast":null,"code":"var _jsxFileName = \"/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/pages/blogs.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport Link from 'next/Link';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport fetch from 'isomorphic-unfetch'; //global styles can be found at ../styles/main.scss\n//import specific styling module\n//import blogsStyles from './blogs.module.scss'\n\nclass Blogs extends react.Component {\n  static async getInitialProps() {\n    let posts = [];\n\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n      posts = await response.json();\n    } catch (err) {\n      console.log(err);\n    }\n\n    return {\n      posts: posts.splice(0, 10)\n    };\n  }\n\n  renderPosts(posts) {\n    return posts.map(post => {\n      return (// every iterated react item needs to have a key\n        __jsx(\"li\", {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: `/blogs/blog?title=${post.title}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, post.title)))\n      );\n    });\n  }\n\n  render() {\n    // console.log(this.props.posts);\n    const posts = this.props.posts;\n    return __jsx(BaseLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"This is the Blogs Page\"), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.renderPosts(posts)));\n  }\n\n}\n\nexport default Blogs;","map":{"version":3,"sources":["/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/pages/blogs.js"],"names":["react","Link","BaseLayout","fetch","Blogs","Component","getInitialProps","posts","response","json","err","console","log","splice","renderPosts","map","post","id","title","render","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAEhC,eAAaC,eAAb,GAA+B;AAC3B,QAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAAC,4CAAD,CAA5B;AACAI,MAAAA,KAAK,GAAG,MAAMC,QAAQ,CAACC,IAAT,EAAd;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;;AAED,WAAO;AAAEH,MAAAA,KAAK,EAAEA,KAAK,CAACM,MAAN,CAAa,CAAb,EAAgB,EAAhB;AAAT,KAAP;AACH;;AAEDC,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACf,WAAOA,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AACvB,aACI;AACA;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAG,qBAAoBD,IAAI,CAACE,KAAM,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,IAAI,CAACE,KAAT,CADJ,CADJ;AAFJ;AAQH,KATM,CAAP;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAMZ,KAAK,GAAG,KAAKa,KAAL,CAAWb,KAAzB;AAEA,WACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKO,WAAL,CAAiBP,KAAjB,CAFR,CAFJ,CADJ;AAUH;;AA3C+B;;AA8CpC,eAAeH,KAAf","sourcesContent":["import react from 'react';\nimport Link from 'next/Link';\nimport BaseLayout from '../components/layouts/BaseLayout'\nimport fetch from 'isomorphic-unfetch';\n\n//global styles can be found at ../styles/main.scss\n//import specific styling module\n//import blogsStyles from './blogs.module.scss'\n\nclass Blogs extends react.Component {\n\n    static async getInitialProps() {\n        let posts = [];\n\n        try {\n            const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n            posts = await response.json();\n        } catch (err) {\n            console.log(err);\n        }\n\n        return { posts: posts.splice(0, 10) };\n    }\n\n    renderPosts(posts) {\n        return posts.map((post) => {\n            return (\n                // every iterated react item needs to have a key\n                <li key={post.id}>\n                    <Link href={`/blogs/blog?title=${post.title}`}>\n                        <a>{post.title}</a>\n                    </Link>\n                </li>\n            )\n        }\n        )\n    }\n\n    render() {\n        // console.log(this.props.posts);\n        const posts = this.props.posts;\n\n        return (\n            <BaseLayout>\n                <h1>This is the Blogs Page</h1>\n                <ul>\n                    {\n                        this.renderPosts(posts)\n                    }\n                </ul>\n            </BaseLayout>\n        )\n    }\n}\n\nexport default Blogs;"]},"metadata":{},"sourceType":"module"}