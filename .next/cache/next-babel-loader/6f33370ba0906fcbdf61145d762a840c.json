{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport cx from 'classnames';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport Fade from 'react-reveal/Fade';\nimport handleViewport from 'react-in-viewport';\n\nvar Component = function Component() {\n  return __jsx(\"div\", {\n    className: \"contentContainer\"\n  });\n};\n\nvar ViewportBlock = handleViewport(Component);\n\nvar ContentContainer = function ContentContainer() {\n  return __jsx(ViewportBlock, null);\n};\n\nexport default ContentContainer;\n{}\n/* <VisibilitySensor>\n   {({ isVisible }) =>\n       <div className='contentContainer'>\n           {props.children}\n       </div>\n   }\n</VisibilitySensor > */\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{\n  /* <VisibilitySensor\n  partialVisibility\n  offset={{ top: 100, bottom: 100 }}\n  onChange={(isVisible) => {\n     this.setState({ visible: isVisible })\n     // console.log('Element is now %s', this.state.visible);\n  }}\n  > */\n}\n{}\n/* <style jsx>{`\n                       .contentTransition {\n                           opacity: ${this.state.visible ? 1 : 0};\n                           transition: opacity 0.5s linear;\n                       }\n                   `}</style> */\n// const springProps = useSpring(\n//     {\n//         config: { duration: 350 },\n//         opacity: 1,\n//         transform: 'translateY(0px)',\n//         from: {\n//             opacity: 0,\n//             transform: 'translateY(20px)'\n//         }\n//     }\n// )\n// <Fade\n//     duration={1000}\n//     delay={100}\n//     mountOnEnter={true}\n// >\n//     <div className='contentContainer'>\n//         {props.children}\n//     </div>\n// </Fade>","map":{"version":3,"sources":["/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/components/layouts/ContentContainer.js"],"names":["react","useSpring","animated","cx","VisibilitySensor","Fade","handleViewport","Component","ViewportBlock","ContentContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,IADJ;AAKH,CAND;;AAQA,IAAMC,aAAa,GAAGF,cAAc,CAACC,SAAD,CAApC;;AAEA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,SACI,MAAC,aAAD,OADJ;AAGH,CAJD;;AAMA,eAAeA,gBAAf;AAGA,CAMwB;AANvB;;;;;;;AAQD;AACA;AACA;;AAEA;AAAC;;;;;;;;AAOI;AAEL,CAKkC;AALjC;;;;;;AAQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import react from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport cx from 'classnames'\nimport VisibilitySensor from 'react-visibility-sensor'\nimport Fade from 'react-reveal/Fade';\nimport handleViewport from 'react-in-viewport';\n\nconst Component = () => {\n    return (\n        <div className='contentContainer'>\n            {}\n        </div>\n    );\n};\n\nconst ViewportBlock = handleViewport(Component);\n\nconst ContentContainer = () => {\n    return (\n        <ViewportBlock />\n    )\n}\n\nexport default ContentContainer;\n\n\n{/* <VisibilitySensor>\n    {({ isVisible }) =>\n        <div className='contentContainer'>\n            {props.children}\n        </div>\n    }\n</VisibilitySensor > */}\n\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{/* <VisibilitySensor\npartialVisibility\noffset={{ top: 100, bottom: 100 }}\nonChange={(isVisible) => {\n    this.setState({ visible: isVisible })\n    // console.log('Element is now %s', this.state.visible);\n}}\n> */}\n\n{/* <style jsx>{`\n                        .contentTransition {\n                            opacity: ${this.state.visible ? 1 : 0};\n                            transition: opacity 0.5s linear;\n                        }\n                    `}</style> */}\n\n\n// const springProps = useSpring(\n//     {\n//         config: { duration: 350 },\n//         opacity: 1,\n//         transform: 'translateY(0px)',\n//         from: {\n//             opacity: 0,\n//             transform: 'translateY(20px)'\n//         }\n//     }\n// )\n\n// <Fade\n//     duration={1000}\n//     delay={100}\n//     mountOnEnter={true}\n// >\n//     <div className='contentContainer'>\n//         {props.children}\n//     </div>\n// </Fade>"]},"metadata":{},"sourceType":"module"}