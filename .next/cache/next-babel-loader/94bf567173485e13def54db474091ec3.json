{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport cx from 'classnames'; //spring props\n\nvar springProps = useSpring({\n  opacity: 1,\n  from: {\n    opacity: 0\n  }\n});\n\nvar ContentContainer =\n/*#__PURE__*/\nfunction (_react$Component) {\n  _inherits(ContentContainer, _react$Component);\n\n  function ContentContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContentContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContentContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      visible: true\n    });\n\n    return _this;\n  }\n\n  _createClass(ContentContainer, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(animated.div, {\n        style: springProps\n      }, __jsx(\"div\", {\n        className: \"contentContainer\"\n      }, this.props.children));\n    }\n  }]);\n\n  return ContentContainer;\n}(react.Component);\n\nexport default ContentContainer;\n{}\n/* <VisibilitySensor>\n   {({ isVisible }) =>\n       <div className='contentContainer'>\n           {props.children}\n       </div>\n   }\n</VisibilitySensor > */\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{\n  /* <VisibilitySensor\n  partialVisibility\n  offset={{ top: 100, bottom: 100 }}\n  onChange={(isVisible) => {\n     this.setState({ visible: isVisible })\n     // console.log('Element is now %s', this.state.visible);\n  }}\n  > */\n}\n\n__jsx(\"style\", {\n  jsx: true\n}, \"\\n                        .contentTransition {\\n                            opacity: \".concat(this.state.visible ? 1 : 0, \";\\n                            transition: opacity 0.5s linear;\\n                        }\\n                    \"));","map":{"version":3,"sources":["/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/components/layouts/ContentContainer.js"],"names":["react","useSpring","animated","cx","springProps","opacity","from","ContentContainer","visible","props","children","Component","state"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,EAAP,MAAe,YAAf,C,CAEA;;AACA,IAAMC,WAAW,GAAGH,SAAS,CAAC;AAAEI,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,IAAI,EAAE;AAAED,IAAAA,OAAO,EAAE;AAAX;AAApB,CAAD,CAA7B;;IAEME,gB;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,OAAO,EAAE;AADL,K;;;;;;;6BAIC;AACL,aACI,MAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEJ;AAArB,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACK,KAAKK,KAAL,CAAWC,QADhB,CADJ,CADJ;AASH;;;;EAf0BV,KAAK,CAACW,S;;AAkBrC,eAAeJ,gBAAf;AAGA,CAMwB;AANvB;;;;;;;AAQD;AACA;AACA;;AAEA;AAAC;;;;;;;;AAOI;;AAEL;AAAO,EAAA,GAAG;AAAV,kGAEuC,KAAKK,KAAL,CAAWJ,OAAX,GAAqB,CAArB,GAAyB,CAFhE","sourcesContent":["import react from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport cx from 'classnames'\n\n//spring props\nconst springProps = useSpring({ opacity: 1, from: { opacity: 0 } })\n\nclass ContentContainer extends react.Component {\n    state = {\n        visible: true\n    }\n\n    render() {\n        return (\n            <animated.div style={springProps}>\n                <div className='contentContainer'>\n                    {this.props.children}\n\n                </div>\n            </animated.div>\n\n        )\n    }\n}\n\nexport default ContentContainer;\n\n\n{/* <VisibilitySensor>\n    {({ isVisible }) =>\n        <div className='contentContainer'>\n            {props.children}\n        </div>\n    }\n</VisibilitySensor > */}\n\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{/* <VisibilitySensor\npartialVisibility\noffset={{ top: 100, bottom: 100 }}\nonChange={(isVisible) => {\n    this.setState({ visible: isVisible })\n    // console.log('Element is now %s', this.state.visible);\n}}\n> */}\n\n<style jsx>{`\n                        .contentTransition {\n                            opacity: ${this.state.visible ? 1 : 0};\n                            transition: opacity 0.5s linear;\n                        }\n                    `}</style>"]},"metadata":{},"sourceType":"module"}