{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport cx from 'classnames';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport Fade from 'react-reveal/Fade';\n\nvar ContentContainer = function ContentContainer(props) {\n  return __jsx(Fade, {\n    bottom: true,\n    duration: 500,\n    delay: 500,\n    mountOnEnter: true\n  }, __jsx(\"div\", {\n    className: \"contentContainer\"\n  }, props.children));\n};\n\nexport default ContentContainer;\n{}\n/* <VisibilitySensor>\n   {({ isVisible }) =>\n       <div className='contentContainer'>\n           {props.children}\n       </div>\n   }\n</VisibilitySensor > */\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{\n  /* <VisibilitySensor\n  partialVisibility\n  offset={{ top: 100, bottom: 100 }}\n  onChange={(isVisible) => {\n     this.setState({ visible: isVisible })\n     // console.log('Element is now %s', this.state.visible);\n  }}\n  > */\n}\n{}\n/* <style jsx>{`\n                       .contentTransition {\n                           opacity: ${this.state.visible ? 1 : 0};\n                           transition: opacity 0.5s linear;\n                       }\n                   `}</style> */\n// const springProps = useSpring(\n//     {\n//         config: { duration: 350 },\n//         opacity: 1,\n//         transform: 'translateY(0px)',\n//         from: {\n//             opacity: 0,\n//             transform: 'translateY(20px)'\n//         }\n//     }\n// )","map":{"version":3,"sources":["/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/components/layouts/ContentContainer.js"],"names":["react","useSpring","animated","cx","VisibilitySensor","Fade","ContentContainer","props","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,SACI,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AACI,IAAA,QAAQ,EAAE,GADd;AAEI,IAAA,KAAK,EAAE,GAFX;AAGI,IAAA,YAAY,EAAE;AAHlB,KAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKA,KAAK,CAACC,QADX,CALJ,CADJ;AAWH,CAZD;;AAcA,eAAeF,gBAAf;AAGA,CAMwB;AANvB;;;;;;;AAQD;AACA;AACA;;AAEA;AAAC;;;;;;;;AAOI;AAEL,CAKkC;AALjC;;;;;;AAQmB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import react from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport cx from 'classnames'\nimport VisibilitySensor from 'react-visibility-sensor'\nimport Fade from 'react-reveal/Fade';\n\n\nconst ContentContainer = (props) => {\n    return (\n        <Fade bottom\n            duration={500}\n            delay={500}\n            mountOnEnter={true}\n        >\n            <div className='contentContainer'>\n                {props.children}\n            </div>\n        </Fade>\n    )\n}\n\nexport default ContentContainer;\n\n\n{/* <VisibilitySensor>\n    {({ isVisible }) =>\n        <div className='contentContainer'>\n            {props.children}\n        </div>\n    }\n</VisibilitySensor > */}\n\n// {this.state.visible &&\n//     this.props.children\n// }\n\n{/* <VisibilitySensor\npartialVisibility\noffset={{ top: 100, bottom: 100 }}\nonChange={(isVisible) => {\n    this.setState({ visible: isVisible })\n    // console.log('Element is now %s', this.state.visible);\n}}\n> */}\n\n{/* <style jsx>{`\n                        .contentTransition {\n                            opacity: ${this.state.visible ? 1 : 0};\n                            transition: opacity 0.5s linear;\n                        }\n                    `}</style> */}\n\n\n                    // const springProps = useSpring(\n                    //     {\n                    //         config: { duration: 350 },\n                    //         opacity: 1,\n                    //         transform: 'translateY(0px)',\n                    //         from: {\n                    //             opacity: 0,\n                    //             transform: 'translateY(20px)'\n                    //         }\n                    //     }\n                    // )"]},"metadata":{},"sourceType":"module"}