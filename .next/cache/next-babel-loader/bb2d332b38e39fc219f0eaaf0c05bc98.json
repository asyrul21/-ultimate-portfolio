{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/pages/blogs.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport react from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport cx from 'classnames'; // import layouts\n\nimport ContentLayout from '../components/layouts/ContentLayout';\nimport ContentContainer from '../components/layouts/ContentContainer'; //import components\n\nimport ContentHead from '../components/shared/ContentHead'; //global styles can be found at ../styles/main.scss\n//import specific styling module\n\nimport blogsStyles from './styles/blogs.module.scss';\n\nvar Blogs = /*#__PURE__*/function (_react$Component) {\n  _inherits(Blogs, _react$Component);\n\n  var _super = _createSuper(Blogs);\n\n  function Blogs() {\n    _classCallCheck(this, Blogs);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Blogs, [{\n    key: \"renderPosts\",\n    value: function renderPosts(posts) {\n      var _this = this;\n\n      return posts.map(function (post) {\n        return (// every iterated react item needs to have a key\n          __jsx(\"li\", {\n            key: post.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }\n          }, __jsx(Link, {\n            as: \"/blogs/\".concat(post.id),\n            href: \"/blogs/[id]\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }\n          }, __jsx(\"a\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }\n          }, post.title)))\n        );\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.posts);\n      var posts = this.props.posts;\n      return __jsx(ContentLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: cx('hero', blogsStyles.blogsHero),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), __jsx(ContentContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, __jsx(Fade, {\n        delay: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, __jsx(ContentHead, {\n        data: contentHeadData.fitness,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      })), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"This is the Blogs Page\"), __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, this.renderPosts(posts)))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var posts, response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              posts = [];\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/posts'));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              posts = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n              return _context.abrupt(\"return\", {\n                posts: posts.splice(0, 10)\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    }\n  }]);\n\n  return Blogs;\n}(react.Component);\n\nexport default Blogs;","map":{"version":3,"sources":["/Users/asyrulhafetzy/Documents/CSDevelopment/Web/myUltimatePortfolio/ultimateportfolio-next/pages/blogs.js"],"names":["react","Link","fetch","cx","ContentLayout","ContentContainer","ContentHead","blogsStyles","Blogs","posts","map","post","id","title","props","blogsHero","contentHeadData","fitness","renderPosts","response","json","console","log","splice","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,EAAP,MAAe,YAAf,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,gBAAP,MAA6B,wCAA7B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,kCAAxB,C,CAEA;AACA;;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;IAEMC,K;;;;;;;;;;;;;gCAeUC,K,EAAO;AAAA;;AACf,aAAOA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAU;AACvB,eACI;AACA;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,IAAD;AAAM,YAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAAR;AAA+B,YAAA,IAAI,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,KAAT,CADJ,CADJ;AAFJ;AAQH,OATM,CAAP;AAWH;;;6BAEQ;AACL;AACA,UAAMJ,KAAK,GAAG,KAAKK,KAAL,CAAWL,KAAzB;AAEA,aACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEN,EAAE,CAAC,MAAD,EAASI,WAAW,CAACQ,SAArB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,WAAD;AAAa,QAAA,IAAI,EAAEC,eAAe,CAACC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKC,WAAL,CAAiBT,KAAjB,CAFR,CANJ,CAHJ,CADJ,CADJ;AAoBH;;;;;;;;;AAlDOA,cAAAA,K,GAAQ,E;;;+CAGeP,KAAK,CAAC,4CAAD,C;;;AAAtBiB,cAAAA,Q;;+CACQA,QAAQ,CAACC,IAAT,E;;;AAAdX,cAAAA,K;;;;;;;AAEAY,cAAAA,OAAO,CAACC,GAAR;;;+CAGG;AAAEb,gBAAAA,KAAK,EAAEA,KAAK,CAACc,MAAN,CAAa,CAAb,EAAgB,EAAhB;AAAT,e;;;;;;;;;;;;EAZKvB,KAAK,CAACwB,S;;AAwD1B,eAAehB,KAAf","sourcesContent":["import react from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport cx from 'classnames';\n\n// import layouts\nimport ContentLayout from '../components/layouts/ContentLayout'\nimport ContentContainer from '../components/layouts/ContentContainer'\n\n//import components\nimport ContentHead from '../components/shared/ContentHead'\n\n//global styles can be found at ../styles/main.scss\n//import specific styling module\nimport blogsStyles from './styles/blogs.module.scss'\n\nclass Blogs extends react.Component {\n\n    static async getInitialProps() {\n        let posts = [];\n\n        try {\n            const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n            posts = await response.json();\n        } catch (err) {\n            console.log(err);\n        }\n\n        return { posts: posts.splice(0, 10) };\n    }\n\n    renderPosts(posts) {\n        return posts.map((post) => {\n            return (\n                // every iterated react item needs to have a key\n                <li key={post.id}>\n                    <Link as={`/blogs/${post.id}`} href=\"/blogs/[id]\">\n                        <a>{post.title}</a>\n                    </Link>\n                </li>\n            )\n        }\n        )\n    }\n\n    render() {\n        // console.log(this.props.posts);\n        const posts = this.props.posts;\n\n        return (\n            <ContentLayout>\n                <section>\n                    <div className={cx('hero', blogsStyles.blogsHero)}></div>\n\n                    <ContentContainer>\n                        <Fade delay={200}>\n                            <ContentHead data={contentHeadData.fitness} />\n                        </Fade>\n\n                        <h1>This is the Blogs Page</h1>\n                        <ul>\n                            {\n                                this.renderPosts(posts)\n                            }\n                        </ul>\n                    </ContentContainer>\n                </section>\n            </ContentLayout>\n        )\n    }\n}\n\nexport default Blogs;"]},"metadata":{},"sourceType":"module"}